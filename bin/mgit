#!/bin/sh
# Created: Tue Nov  6 10:47:19 MYT 2012

. `dirname $0`/common.sh

me=`basename $0`
usage() {
cat <<EOF
NAME
  $me - Run git commands for each git repositories under current directory

PURPOSE
  Run git command on multiple git repositories and format the
  output as if they come from a single repository (using the -p
  option) - works good only for ls-files.

SYNOPSIS
  $me [-hq] <git args>

OPTIONS
  -c
    pass -c ui.color=always to git
  -p
    Prepend dirname of git repo foreach line of output
  -v
    Be verbose - show directory being worked on
  -h
    Show this help message
EOF
}

verbose=
add_prefix=
color_always=
while getopts chpv opt
do
  case "$opt" in
    c) color_always="-c color.ui=always";;
    p) add_prefix=t;;
    v) verbose=t;;
    h) usage ; exit;;
    \?) echo Unknown option ; exit;;
  esac
done
shift $(($OPTIND -1))

git_dirs=`find -maxdepth 2 -type d -name .git|sed -e 's,./,,'`
ngits=`echo $git_dirs|wc -w`
if [ $ngits -le 1 ]; then
  exec git "$@";
elif [ $ngits -gt 1 ]; then
  export MGIT_MODE=true
fi

for gitdir in $git_dirs; do
(
  dir=`dirname $gitdir`
  cd $dir
  test -n "$verbose" && echo $lightblue$dir$reset
  test -z "$1" && continue
  if [ -n "$add_prefix" ]; then
    git $color_always "$@"|sed -e "s=^\([^m]\+m\)\{0,1\}=\1$dir/=";
  else
    git $color_always "$@"
  fi
  cd ..
)
done
