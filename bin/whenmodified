#!/bin/sh
# whenmodified - Explanation goes here
# Created: Fri Dec  4 10:19:56 MYT 2009

. ~/.shell/osd.rc
usage() {
	echo "whenmodified [-f(forever)] [-d <delay>] [-t] -c <whattodo> 'cmd to get files to monitor'
OPTIONS
    -c <whattodo>
	Run <whattodo> when files are modified
    -C
	Clear screen after each wait
    -d <delay>
	Want <delay> seconds before executing <whattodo>
    -f
	Run forever
    -t
	TDD mode - set root window background to red/green
    -H
	Show headline before each wait"
}

clear=
delay=.1
whattodo=
tddmode=
want_headline=
while getopts fhc:Cd:Ht opt
do
	case "$opt" in
    d) delay=$OPTARG;;
    f) FOREVER=1;;
    C) clear=t ;;
    c) whattodo="$OPTARG";;
    h) usage ; exit;;
    H) want_headline=t;;
    t) tddmode=t;;
	\?) echo Unknown option ; exit;;
	esac
done
shift $(($OPTIND -1))

if [ -z "$whattodo" ]; then
    usage
    exit 1;
fi

if [ -z "$*" ]; then
    usage
    exit 1;
fi

maybeClear() {
    test -n "$clear" && clear
}

headline() {
    if [ -n "$want_headline" ]
    then
	echo "[PENDING] $whattodo [MODIFIED] $modifiedfiles"
    fi
}

tdd_reset_result() {
    xsetroot -solid darkgray
}

tdd_report_result() {
    ret=$1
    if [ $ret -eq 0 ]; then
        # Test passed
        xsetroot -solid darkgreen
    else
        # Test failed
        xsetroot -solid red
    fi
}


events=modify,attrib,close_write,moved_to,moved_from,move,move_self,create,delete,delete_self

if ! which inotifywait >/dev/null; then
    echo "inotifywait not available"
    exit 1
fi

inotifycmd="inotifywait -e $events -q -q"
modifiedfiles=$*
maybeClear
headline
while true; do
    $inotifycmd $(eval $modifiedfiles) && {
	sleep $delay
	maybeClear
	echo "$whattodo"
	#echo "$whattodo"|osd --font='DeJavu Sans Mono 16' &
	tdd_reset_result
	eval "$whattodo"
	ret=$?
	test -n "$tddmode" && tdd_report_result $ret
    }
    if [ ! $FOREVER ]; then
	    break;
    fi
    headline
done
